version: "3.6"
services:
  arkeod:
    hostname: arkeod
    image: arkeo
    build:
      dockerfile: ./Dockerfile
    ports:
      - "1317:1317"
      - "26656:26656"
      - "26657:26657"
    volumes:
      - ".arkeo:/root/.arkeo:rw"
    environment:
      NET: "mocknet"
    entrypoint: /scripts/genesis.sh
    command: arkeod start --pruning nothing

  arkeod-1:
    image: arkeo
    build:
      dockerfile: ./Dockerfile
    ports:
      - "1317"
      - "26657"
    environment:
      NET: "mocknet"
      PEER: arkeod
    entrypoint: /scripts/validator.sh
    command: arkeod start

  sentinel:
    image: arkeo
    build:
      dockerfile: ./Dockerfile
    depends_on:
      - "arkeod"
    ports:
      - "3636:3636"
    environment:
      NET: "mocknet"
      MONIKER: "local"
      WEBSITE: "n/a"
      DESCRIPTION: "n/a"
      LOCATION: "n/a"
      PORT: "3636"
      SOURCE_CHAIN: "http://arkeod:1317"
      EVENT_STREAM_HOST: "arkeod:26657"
      FREE_RATE_LIMIT: 10
      FREE_RATE_LIMIT_DURATION: "1m"
      CLAIM_STORE_LOCATION: "/root/.arkeo/claims"
      CONTRACT_CONFIG_STORE_LOCATION: "/root/.arkeo/contract_configs"
    entrypoint: "/scripts/sentinel.sh"
    command: sentinel
    volumes:
      - ".sentinel:/root/.arkeo:rw"
      - "./scripts:/scripts"

  directory-postgres:
    image: postgres:15.1-alpine
    hostname: directory-postgres
    restart: always
    environment:
      POSTGRES_DB: arkeo_directory
      POSTGRES_USER: arkeo
      POSTGRES_PASSWORD: arkeo123
    ports:
      - "5432:5432"
    healthcheck:
      test: netstat -an | grep -q 5432
      interval: 1s
      start_period: 10s
      retries: 5
      timeout: 5s

  init-directory-db:
    image: arkeo
    build:
      dockerfile: ./Dockerfile
    entrypoint: []
    command:
      - "tern"
      - "migrate"
      - "-c"
      - "/directory/tern/tern.conf"
      - "-m"
      - "/directory/tern"
    env_file:
      - ./docker-directory.env
    volumes:
      - ./directory/tern:/directory/tern
    depends_on:
      directory-postgres:
        condition: service_healthy

  directory-indexer:
    image: arkeo
    build:
      dockerfile: ./Dockerfile
    entrypoint: []
    command:
      - "indexer"
    env_file:
      - ./docker-directory.env
    depends_on:
      init-directory-db:
        condition: service_completed_successfully

  directory-api:
    image: arkeo
    build:
      dockerfile: ./Dockerfile
    entrypoint: []
    command:
      - "api"
    env_file:
      - ./docker-directory.env
    ports:
      - "7777:7777"
    depends_on:
      directory-postgres:
        condition: service_healthy
