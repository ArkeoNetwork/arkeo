---
before:
  hooks:
    - apt update && apt install musl-dev=1.2.2-1
env:
  - CGO_ENABLED=1

git:
  # What should be used to sort tags when gathering the current and previous
  # tags if there are more than one tag in the same commit.
  #
  # Default: '-version:refname'
  # Source: https://goreleaser.com/customization/git/
  tag_sort: -version:creatordate

builds:
  - id: arkeod-linux-arm64
    main: ./cmd/arkeod
    binary: arkeod
    goos:
      - linux
    goarch:
      - arm64
    env:
      - CC=aarch64-linux-gnu-gcc
      - CXX=aarch64-linux-gnu-g++
    flags:
      - -mod=readonly
      - -trimpath
    ldflags:
      - -s -w
      - -X main.commit={{.Commit}}
      - -X main.date={{ .CommitDate }}
      - -X github.com/cosmos/cosmos-sdk/version.Name=Arkeo
      - -X github.com/cosmos/cosmos-sdk/version.AppName=arkeo
      - -X github.com/cosmos/cosmos-sdk/version.Version=v{{ .Version }}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{ .Commit }}
      - -linkmode=external
      - -extldflags '-Wl,-z,muldefs --static -lm'
    tags:
      - netgo
      - muslc
  - id: arkeod-darwin-amd64
    main: ./cmd/arkeod
    binary: arkeod
    env:
      - CC=o64-clang
      - CGO_LDFLAGS=-L/lib
    goos:
      - darwin
    goarch:
      - amd64
    flags:
      - -mod=readonly
      - -trimpath
    ldflags:
      - -X main.commit={{ .Commit }}
      - -X main.date={{ .CommitDate }}
      - -X github.com/cosmos/cosmos-sdk/version.Name=Arkeo
      - -X github.com/cosmos/cosmos-sdk/version.AppName=arkeo
      - -X github.com/cosmos/cosmos-sdk/version.Version={{ .Version }}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{ .Commit }}
      - -X github.com/cosmos/cosmos-sdk/version.BuildTags=netgo
      - -w -s
      - -linkmode=external
    tags:
      - netgo
  - id: arkeod-darwin-arm64
    main: ./cmd/arkeod
    binary: arkeod
    env:
      - CC=oa64-clang
      - CGO_LDFLAGS=-L/lib
    goos:
      - darwin
    goarch:
      - arm64
    flags:
      - -mod=readonly
      - -trimpath
    ldflags:
      - -X main.commit={{ .Commit }}
      - -X main.date={{ .CommitDate }}
      - -X github.com/cosmos/cosmos-sdk/version.Name=Arkeo
      - -X github.com/cosmos/cosmos-sdk/version.AppName=arkeo
      - -X github.com/cosmos/cosmos-sdk/version.Version={{ .Version }}
      - -X github.com/cosmos/cosmos-sdk/version.Commit={{ .Commit }}
      - -X github.com/cosmos/cosmos-sdk/version.BuildTags=netgo,ledger,static_wasm
      - -w -s
      - -linkmode=external
    tags:
      - netgo
      - ledger
      - static_wasm
universal_binaries:
  - id: arkeod-darwin-all
    ids:
      - arkeod-darwin-amd64
      - arkeod-darwin-arm64
    replace: false
    name_template: "{{ .ProjectName }}d"
release:
  skip_upload: '{{ if eq .Env.RELEASE "true" }}false{{else}}true{{end}}'
archives:
  - id: w/version
    builds:
      - arkeod-linux-arm64
      - arkeod-darwin-amd64
      - arkeod-darwin-arm64
      - arkeod-darwin-all
    name_template: "{{ .ProjectName }}d_v{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    wrap_in_directory: false
    format: zip
    files:
      - none*
  - id: wo/version
    builds:
      - arkeod-linux-arm64
      - arkeod-darwin-amd64
      - arkeod-darwin-arm64
      - arkeod-darwin-all
    name_template: "{{ .ProjectName }}d_{{ .Os }}_{{ .Arch }}"
    wrap_in_directory: false
    format: zip
    files:
      - none*
  - id: binary
    builds:
      - arkeod-linux-arm64
      - arkeod-darwin-amd64
      - arkeod-darwin-arm64
      - arkeod-darwin-all
    name_template: "{{ .ProjectName }}d_{{ .Os }}_{{ .Arch }}"
    wrap_in_directory: false
    format: binary
    files:
      - none*
checksum:
  name_template: "{{ .ProjectName }}d_v{{ .Version }}_cross_checksums.txt"
dockers:
  - use: buildx
    goos: linux
    goarch: arm64
    image_templates:
      - 'ghcr.io/arkeonetwork/{{ .ProjectName }}d:{{if eq .Env.RELEASE "true"}}v{{ .Version }}-arm64v8{{else}}{{ .ShortCommit }}-arm64v8{{end}}'
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}d"
      - "--label=org.opencontainers.image.description={{.ProjectName}}d"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version=v{{.Version}}"
      - "--label=org.opencontainers.image.url=https://arkeo.network"
      - "--label=org.opencontainers.image.source=https://github.com/arkeonetwork/arkeo"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
  - use: buildx
    goos: linux
    goarch: arm64
    dockerfile: Dockerfile.dev
    image_templates:
      - 'ghcr.io/arkeonetwork/{{ .ProjectName }}d-dev:{{if eq .Env.RELEASE "true"}}v{{ .Version }}{{else}}{{ .ShortCommit }}{{end}}-arm64v8'
    build_flag_templates:
      - "--pull"
      - "--platform=linux/arm64"
      - "--label=org.opencontainers.image.created={{.Date}}"
      - "--label=org.opencontainers.image.title={{.ProjectName}}d"
      - "--label=org.opencontainers.image.description={{.ProjectName}}d"
      - "--label=org.opencontainers.image.revision={{.FullCommit}}"
      - "--label=org.opencontainers.image.version=v{{.Version}}"
      - "--label=org.opencontainers.image.url=https://arkeo.network"
      - "--label=org.opencontainers.image.source=https://github.com/arkeonetwork/arkeo"
      - "--label=org.opencontainers.image.licenses=Apache-2.0"
docker_manifests:
  - name_template: 'ghcr.io/arkeonetwork/{{ .ProjectName }}d:{{if eq .Env.RELEASE "true" }}v{{ .Version }}{{else}}{{ .ShortCommit }}{{end}}'
    create_flags:
      - --insecure
    push_flags:
      - --insecure
    image_templates:
      - 'ghcr.io/arkeonetwork/{{ .ProjectName }}d:{{if eq .Env.RELEASE "true"}}v{{ .Version }}-amd64{{else}}{{ .ShortCommit }}-amd64{{end}}'
      - 'ghcr.io/arkeonetwork/{{ .ProjectName }}d:{{if eq .Env.RELEASE "true"}}v{{ .Version }}-arm64v8{{else}}{{ .ShortCommit }}-arm64v8{{end}}'
  - name_template: 'ghcr.io/arkeonetwork/{{ .ProjectName }}d-dev:{{if eq .Env.RELEASE "true" }}v{{ .Version }}{{else}}{{ .ShortCommit }}{{end}}'
    create_flags:
      - --insecure
    push_flags:
      - --insecure
    image_templates:
      - 'ghcr.io/arkeonetwork/{{ .ProjectName }}d-dev:{{if eq .Env.RELEASE "true"}}v{{ .Version }}{{else}}{{ .ShortCommit }}{{end}}-amd64'
      - 'ghcr.io/arkeonetwork/{{ .ProjectName }}d-dev:{{if eq .Env.RELEASE "true"}}v{{ .Version }}{{else}}{{ .ShortCommit }}{{end}}-arm64v8'
